@model HorseBase.Models.ViewModels.ReservationViewModel

@{
    ViewData["Title"] = "Create Reservation";
}

<h1>Create Reservation</h1>

<form asp-action="Create" method="post">
    <div class="form-group">
        <label asp-for="TakeHour"></label>
        <input asp-for="TakeHour" class="form-control" />
        <span asp-validation-for="TakeHour" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="ReturnHour"></label>
        <input asp-for="ReturnHour" class="form-control" />
        <span asp-validation-for="ReturnHour" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Price">Total Price</label>
        <input asp-for="Price" class="form-control" readonly />
    </div>

    <input type="hidden" asp-for="HorseId" />

    <button type="submit" class="btn btn-primary">Reserve</button>
</form>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const takeHourInput = document.querySelector("#TakeHour");
        const returnHourInput = document.querySelector("#ReturnHour");
        const priceInput = document.querySelector("#Price");
        const horsePricePerHour = @Model.Horse.Price;

        function calculatePrice() {
            const takeHour = new Date(takeHourInput.value);
            const returnHour = new Date(returnHourInput.value);

            if (takeHour && returnHour && returnHour > takeHour) {
                const hours = Math.abs(returnHour - takeHour) / 36e5; // Convert milliseconds to hours
                priceInput.value = (horsePricePerHour * hours).toFixed(2);
            } else {
                priceInput.value = "0.00";
            }
        }

        takeHourInput.addEventListener("change", calculatePrice);
        returnHourInput.addEventListener("change", calculatePrice);
    });
</script>

